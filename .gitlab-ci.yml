before_script:
    - apt-get update -yqq
    - 'which git || ( apt-get install git -yqq --force-yes )'
    - 'which ssh-agent || ( apt-get install openssh-client -yqq --force-yes )'
    - 'which rsync || ( apt-get install rsync -y --force-yes )'
    - apt-get install libzip-dev -y --force-yes
    - apt-get install libmcrypt-dev -y --force-yes
    - docker-php-ext-install zip
    - docker-php-ext-install mcrypt
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

stages:
    - test
    - deploy

test:
    image: php:5.6
    stage: test
    environment: test
    only:
        - develop
        - master
    script:
        - make composer.phar .env bootstrap/cache
        - ./composer.phar install --no-interaction --no-scripts
        - vendor/bin/phpunit --testsuite unit

deploy:
    image: php:5.6
    stage: deploy
    environment: production
    only:
        - master
    script:
        - make composer.phar
        - ./composer.phar install --no-interaction --no-dev --no-scripts
        - 'rsync -vurtc --chmod=Du=rwx,Dgo=rx,Fu=rw,Fog=r --exclude=.DS_Store --exclude=.git --exclude=.gitignore --exclude=.gitmodules --exclude=.gitattributes --exclude=.env.local --exclude=.env.example --exclude=README.md --exclude=Makefile --exclude=package.json --exclude=phpspec.yml --exclude=*.sublime-project app bootstrap artisan config database public resources routes vendor ${SSH_USER}@${SSH_HOST}:${SSH_REMOTE_PATH}'
        - 'ssh ${SSH_USER}@${SSH_HOST} "cd ${SSH_REMOTE_PATH}; /usr/local/php5.6/bin/php-cgi artisan down"'
        - 'ssh ${SSH_USER}@${SSH_HOST} "cd ${SSH_REMOTE_PATH}; /usr/local/php5.6/bin/php-cgi artisan migrate:status"'
        - 'ssh ${SSH_USER}@${SSH_HOST} "cd ${SSH_REMOTE_PATH}; /usr/local/php5.6/bin/php-cgi artisan migrate --pretend"'
        - 'ssh ${SSH_USER}@${SSH_HOST} "cd ${SSH_REMOTE_PATH}; /usr/local/php5.6/bin/php-cgi artisan migrate --force"'
        - 'ssh ${SSH_USER}@${SSH_HOST} "cd ${SSH_REMOTE_PATH}; /usr/local/php5.6/bin/php-cgi artisan cache:clear"'
        - 'ssh ${SSH_USER}@${SSH_HOST} "cd ${SSH_REMOTE_PATH}; /usr/local/php5.6/bin/php-cgi artisan config:clear"'
        - 'ssh ${SSH_USER}@${SSH_HOST} "cd ${SSH_REMOTE_PATH}; /usr/local/php5.6/bin/php-cgi artisan route:clear"'
        - 'ssh ${SSH_USER}@${SSH_HOST} "cd ${SSH_REMOTE_PATH}; /usr/local/php5.6/bin/php-cgi artisan twig:clean"'
        - 'ssh ${SSH_USER}@${SSH_HOST} "cd ${SSH_REMOTE_PATH}; /usr/local/php5.6/bin/php-cgi artisan view:clear"'
        - 'ssh ${SSH_USER}@${SSH_HOST} "cd ${SSH_REMOTE_PATH}; /usr/local/php5.6/bin/php-cgi artisan optimize"'
        - 'ssh ${SSH_USER}@${SSH_HOST} "cd ${SSH_REMOTE_PATH}; /usr/local/php5.6/bin/php-cgi artisan up"'
